{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "nodejs-auth-template",
    "description": "Basic NodeJS auth template API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "Sign Up",
      "description": "API for signing up users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Sign Up"],
        "summary": "Register an users in the database",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            },
            "x-examples": {
              "application/json": "{\r\n    \"email\": \"admin@test.com\",\r\n    \"password\": \"\"\r\n}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Sign In"],
        "summary": "Sign in the user setting the JWT in the session.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Model5"
            }
          }
        }
      }
    },
    "/api/users/signout": {
      "post": {
        "tags": ["Sign Out"],
        "summary": "Sign out the current user, setting the JWT to null",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/currentuser": {
      "get": {
        "tags": ["Current user"],
        "summary": "get the current logged in user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "format": "email",
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 20
        }
      }
    },
    "Model0": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Model3": {},
    "Model4": {
      "properties": {
        "currentUser": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "Errors": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Model5": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          }
        }
      }
    },
    "Model6_Errors": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Model6": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model6_Errors"
          }
        }
      }
    },
    "Model7_Errors": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Model7": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model7_Errors"
          }
        }
      }
    },
    "Model8_Errors": {
      "properties": {
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        }
      }
    },
    "Model8": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model8_Errors"
          }
        }
      }
    }
  }
}
